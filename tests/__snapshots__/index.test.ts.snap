// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Should synthesize snapshot for construct > with container support on > Aws 1`] = `
"{
  "data": {
    "aws_caller_identity": {
      "aws_Identity_FDC445BF": {
      }
    },
    "aws_region": {
      "aws_Region_7477CA06": {
      }
    },
    "aws_security_groups": {
      "aws_SecurityGroups_BAABB08D": {
      }
    },
    "aws_subnets": {
      "aws_Subnets_75E5377D": {
      }
    }
  },
  "provider": {
    "aws": [
      {
      }
    ]
  },
  "resource": {
    "aws_cloudwatch_log_group": {
      "aws_AutoscalerLogGroup_BFE58053": {
        "name": "/ecs/Autoscaler"
      },
      "aws_RunnerLogGroup_711756A6": {
        "name": "/ecs/GHA"
      }
    },
    "aws_ecs_cluster": {
      "aws_Cluster_BA268616": {
        "name": "test-cluster"
      }
    },
    "aws_ecs_service": {
      "aws_AutoscalerService_C7C3AA3C": {
        "cluster": "\${aws_ecs_cluster.aws_Cluster_BA268616.arn}",
        "desired_count": 1,
        "launch_type": "FARGATE",
        "lifecycle": {
          "ignore_changes": [
            "desired_count"
          ]
        },
        "name": "autoscaler-service",
        "network_configuration": {
          "assign_public_ip": true,
          "security_groups": "\${data.aws_security_groups.aws_SecurityGroups_BAABB08D.ids}",
          "subnets": "\${data.aws_subnets.aws_Subnets_75E5377D.ids}"
        },
        "task_definition": "\${aws_ecs_task_definition.aws_AutoscalerTaskDefinition_24A76F67.arn_without_revision}"
      }
    },
    "aws_ecs_task_definition": {
      "aws_AutoscalerTaskDefinition_24A76F67": {
        "container_definitions": "\${jsonencode([{\\"name\\" = \\"autoscaler\\", \\"image\\" = var.autoscaler_image, \\"essential\\" = true, \\"environment\\" = [{\\"name\\" = \\"PAT\\", \\"value\\" = var.personal_access_token}, {\\"name\\" = \\"GITHUB_CONFIG_URL\\", \\"value\\" = var.github_config_url}, {\\"name\\" = \\"ECS_CLUSTER\\", \\"value\\" = aws_ecs_cluster.aws_Cluster_BA268616.arn}, {\\"name\\" = \\"ECS_SUBNETS\\", \\"value\\" = join(\\",\\", data.aws_subnets.aws_Subnets_75E5377D.ids)}, {\\"name\\" = \\"ECS_SECURITY_GROUPS\\", \\"value\\" = join(\\",\\", data.aws_security_groups.aws_SecurityGroups_BAABB08D.ids)}, {\\"name\\" = \\"SCALE_SET_NAME\\", \\"value\\" = \\"ecs-runner-set\\"}, {\\"name\\" = \\"TASK_DEFINITION_ARN\\", \\"value\\" = aws_ecs_task_definition.aws_RunnerTaskDefinition_9C7563BE.arn}], \\"logConfiguration\\" = {\\"logDriver\\" = \\"awslogs\\", \\"options\\" = {\\"awslogs-group\\" = aws_cloudwatch_log_group.aws_AutoscalerLogGroup_BFE58053.name, \\"awslogs-region\\" = data.aws_region.aws_Region_7477CA06.name, \\"awslogs-stream-prefix\\" = \\"ecs\\"}}}])}",
        "cpu": "256",
        "execution_role_arn": "\${aws_iam_role.aws_TaskExecutionRole_FAB64402.arn}",
        "family": "Autoscaler",
        "memory": "512",
        "network_mode": "awsvpc",
        "requires_compatibilities": [
          "FARGATE"
        ],
        "runtime_platform": {
          "cpu_architecture": "X86_64",
          "operating_system_family": "LINUX"
        },
        "task_role_arn": "\${aws_iam_role.aws_AutoscalerRole_CEB26423.arn}"
      },
      "aws_RunnerTaskDefinition_9C7563BE": {
        "container_definitions": "\${jsonencode([{\\"name\\" = \\"runner\\", \\"image\\" = \\"ghcr.io/hi-fi/actions-runner:ecs\\", \\"essential\\" = true, \\"entryPoint\\" = [\\"/home/runner/run.sh\\"], \\"environment\\" = [{\\"name\\" = \\"ECS_CLUSTER_NAME\\", \\"value\\" = aws_ecs_cluster.aws_Cluster_BA268616.name}, {\\"name\\" = \\"ACTIONS_RUNNER_POD_NAME\\", \\"value\\" = \\"gha-pod\\"}, {\\"name\\" = \\"ECS_SUBNETS\\", \\"value\\" = join(\\",\\", data.aws_subnets.aws_Subnets_75E5377D.ids)}, {\\"name\\" = \\"ECS_SECURITY_GROUPS\\", \\"value\\" = join(\\",\\", data.aws_security_groups.aws_SecurityGroups_BAABB08D.ids)}, {\\"name\\" = \\"ECS_TASK_ROLE\\", \\"value\\" = aws_iam_role.aws_RunnerRole_75263C23.arn}, {\\"name\\" = \\"ECS_EXECUTION_ROLE\\", \\"value\\" = aws_iam_role.aws_TaskExecutionRole_FAB64402.arn}, {\\"name\\" = \\"EFS_ID\\", \\"value\\" = aws_efs_file_system.aws_efs_B3BBB350.id}, {\\"name\\" = \\"EXTERNALS_EFS_ID\\", \\"value\\" = aws_efs_file_system.aws_externalsEfs_C15353C9.id}, {\\"name\\" = \\"ACTIONS_RUNNER_REQUIRE_JOB_CONTAINER\\", \\"value\\" = \\"false\\"}], \\"mountPoints\\" = [{\\"sourceVolume\\" = \\"work\\", \\"containerPath\\" = \\"/tmp/_work\\"}, {\\"sourceVolume\\" = \\"externals\\", \\"containerPath\\" = \\"/tmp/externals\\"}], \\"logConfiguration\\" = {\\"logDriver\\" = \\"awslogs\\", \\"options\\" = {\\"awslogs-group\\" = aws_cloudwatch_log_group.aws_RunnerLogGroup_711756A6.name, \\"awslogs-region\\" = data.aws_region.aws_Region_7477CA06.name, \\"awslogs-stream-prefix\\" = \\"ecs\\"}}, \\"command\\" = [\\"/bin/sh\\", \\"-c\\", \\"export EXECID=$(cat /proc/sys/kernel/random/uuid) && sudo mkdir -p /tmp/_work/$EXECID && sudo chown runner:runner /tmp/_work/$EXECID && ln -s /tmp/_work/$EXECID _work && sudo chown runner:runner /tmp/externals && /home/runner/run.sh ; sudo rm -r /tmp/_work/$EXECID\\"]}])}",
        "cpu": "1024",
        "execution_role_arn": "\${aws_iam_role.aws_TaskExecutionRole_FAB64402.arn}",
        "family": "GHA",
        "memory": "2048",
        "network_mode": "awsvpc",
        "requires_compatibilities": [
          "FARGATE"
        ],
        "runtime_platform": {
          "cpu_architecture": "X86_64",
          "operating_system_family": "LINUX"
        },
        "task_role_arn": "\${aws_iam_role.aws_RunnerRole_75263C23.arn}",
        "volume": [
          {
            "efs_volume_configuration": {
              "file_system_id": "\${aws_efs_file_system.aws_efs_B3BBB350.id}"
            },
            "name": "work"
          },
          {
            "efs_volume_configuration": {
              "file_system_id": "\${aws_efs_file_system.aws_externalsEfs_C15353C9.id}"
            },
            "name": "externals"
          }
        ]
      }
    },
    "aws_efs_file_system": {
      "aws_efs_B3BBB350": {
        "tags": {
          "Name": "work"
        },
        "throughput_mode": "elastic"
      },
      "aws_externalsEfs_C15353C9": {
        "tags": {
          "Name": "externals"
        },
        "throughput_mode": "elastic"
      }
    },
    "aws_efs_mount_target": {
      "aws_EfsMountTarget_B2BDD3E5": {
        "file_system_id": "\${aws_efs_file_system.aws_efs_B3BBB350.id}",
        "for_each": "\${toset(data.aws_subnets.aws_Subnets_75E5377D.ids)}",
        "subnet_id": "\${each.value}"
      },
      "aws_ExternalsEfsMountTarget_2D9AE418": {
        "file_system_id": "\${aws_efs_file_system.aws_externalsEfs_C15353C9.id}",
        "for_each": "\${toset(data.aws_subnets.aws_Subnets_75E5377D.ids)}",
        "subnet_id": "\${each.value}"
      }
    },
    "aws_iam_policy": {
      "aws_AutoscalerPolicy_FF16A997": {
        "policy": "\${jsonencode({\\"Version\\" = \\"2012-10-17\\", \\"Statement\\" = [{\\"Sid\\" = \\"StartandMonitorTask\\", \\"Effect\\" = \\"Allow\\", \\"Action\\" = [\\"ecs:RunTask\\", \\"ecs:DescribeTasks\\", \\"logs:GetLogEvents\\", \\"iam:PassRole\\"], \\"Resource\\" = [\\"\${aws_ecs_task_definition.aws_RunnerTaskDefinition_9C7563BE.arn_without_revision}:*\\", aws_iam_role.aws_TaskExecutionRole_FAB64402.arn, aws_iam_role.aws_RunnerRole_75263C23.arn, \\"arn:aws:ecs:\${data.aws_region.aws_Region_7477CA06.name}:\${data.aws_caller_identity.aws_Identity_FDC445BF.account_id}:task/\${aws_ecs_cluster.aws_Cluster_BA268616.name}/*\\", \\"\${aws_cloudwatch_log_group.aws_RunnerLogGroup_711756A6.arn}:log-stream:*\\"]}, {\\"Sid\\" = \\"GetVpcInfo\\", \\"Effect\\" = \\"Allow\\", \\"Action\\" = [\\"ec2:DescribeSubnets\\", \\"ec2:DescribeSecurityGroups\\"], \\"Resource\\" = \\"*\\"}]})}"
      },
      "aws_RunnerPolicy_7B21DB81": {
        "policy": "\${jsonencode({\\"Version\\" = \\"2012-10-17\\", \\"Statement\\" = [{\\"Sid\\" = \\"StartandMonitorTask\\", \\"Effect\\" = \\"Allow\\", \\"Action\\" = [\\"ecs:RunTask\\", \\"ecs:TagResource\\", \\"ecs:ListTaskDefinitions\\", \\"ecs:ListTasks\\", \\"ecs:StopTask\\", \\"ecs:RegisterTaskDefinition\\", \\"ecs:DescribeTaskDefinition\\", \\"ecs:DeregisterTaskDefinition\\", \\"ecs:DeleteTaskDefinitions\\", \\"ecs:ExecuteCommand\\", \\"ecs:DescribeTasks\\", \\"logs:GetLogEvents\\", \\"iam:PassRole\\", \\"logs:StartLiveTail\\", \\"logs:CreateLogStream\\"], \\"Resource\\" = [\\"arn:aws:ecs:\${data.aws_region.aws_Region_7477CA06.name}:\${data.aws_caller_identity.aws_Identity_FDC445BF.account_id}:task-definition/gha-pod-workflow:*\\", aws_ecs_cluster.aws_Cluster_BA268616.arn, aws_iam_role.aws_TaskExecutionRole_FAB64402.arn, aws_iam_role.aws_RunnerRole_75263C23.arn, \\"arn:aws:ecs:\${data.aws_region.aws_Region_7477CA06.name}:\${data.aws_caller_identity.aws_Identity_FDC445BF.account_id}:task/\${aws_ecs_cluster.aws_Cluster_BA268616.name}/*\\", \\"*\\"]}, {\\"Sid\\" = \\"GetVpcInfo\\", \\"Effect\\" = \\"Allow\\", \\"Action\\" = [\\"ec2:DescribeSubnets\\", \\"ec2:DescribeSecurityGroups\\"], \\"Resource\\" = \\"*\\"}, {\\"Sid\\" = \\"ExecCommands\\", \\"Effect\\" = \\"Allow\\", \\"Action\\" = [\\"ssmmessages:CreateControlChannel\\", \\"ssmmessages:CreateDataChannel\\", \\"ssmmessages:OpenControlChannel\\", \\"ssmmessages:OpenDataChannel\\"], \\"Resource\\" = \\"*\\"}]})}"
      }
    },
    "aws_iam_role": {
      "aws_AutoscalerRole_CEB26423": {
        "assume_role_policy": "\${jsonencode({\\"Version\\" = \\"2012-10-17\\", \\"Statement\\" = [{\\"Effect\\" = \\"Allow\\", \\"Principal\\" = {\\"Service\\" = \\"ecs-tasks.amazonaws.com\\"}, \\"Action\\" = \\"sts:AssumeRole\\"}]})}"
      },
      "aws_RunnerRole_75263C23": {
        "assume_role_policy": "\${jsonencode({\\"Version\\" = \\"2012-10-17\\", \\"Statement\\" = [{\\"Effect\\" = \\"Allow\\", \\"Principal\\" = {\\"Service\\" = \\"ecs-tasks.amazonaws.com\\"}, \\"Action\\" = \\"sts:AssumeRole\\"}]})}"
      },
      "aws_TaskExecutionRole_FAB64402": {
        "assume_role_policy": "\${jsonencode({\\"Version\\" = \\"2012-10-17\\", \\"Statement\\" = [{\\"Effect\\" = \\"Allow\\", \\"Principal\\" = {\\"Service\\" = \\"ecs-tasks.amazonaws.com\\"}, \\"Action\\" = \\"sts:AssumeRole\\"}]})}"
      }
    },
    "aws_iam_role_policy_attachment": {
      "aws_AutoscalerPolicyAttachment_5402A0C0": {
        "policy_arn": "\${aws_iam_policy.aws_AutoscalerPolicy_FF16A997.arn}",
        "role": "\${aws_iam_role.aws_AutoscalerRole_CEB26423.name}"
      },
      "aws_RunnerPolicyAttachment_A293771C": {
        "policy_arn": "\${aws_iam_policy.aws_RunnerPolicy_7B21DB81.arn}",
        "role": "\${aws_iam_role.aws_RunnerRole_75263C23.name}"
      },
      "aws_TeskExecutionRoleAttachment_9AEA9D8D": {
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        "role": "\${aws_iam_role.aws_TaskExecutionRole_FAB64402.name}"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "aws": {
        "source": "aws",
        "version": "6.7.0"
      }
    }
  },
  "variable": {
    "autoscaler_image": {
      "default": "ghcr.io/hi-fi/gha-runners-on-managed-env:ebe559da0d51e04eff903f0a04de09da93f4614f",
      "description": "Autoscaler image triggering runners"
    },
    "github_config_url": {
      "description": "Github URL where runners should register to. Format https://<GitHub host>/<your_enterprise/org/repo>",
      "nullable": false
    },
    "personal_access_token": {
      "description": "Github PAT with Actions:Read and Admin:Read+Write scopes",
      "nullable": false,
      "sensitive": true
    }
  }
}"
`;

exports[`Should synthesize snapshot for construct > without container support on > Aws 1`] = `
"{
  "data": {
    "aws_caller_identity": {
      "aws_Identity_FDC445BF": {
      }
    },
    "aws_region": {
      "aws_Region_7477CA06": {
      }
    },
    "aws_security_groups": {
      "aws_SecurityGroups_BAABB08D": {
      }
    },
    "aws_subnets": {
      "aws_Subnets_75E5377D": {
      }
    }
  },
  "provider": {
    "aws": [
      {
      }
    ]
  },
  "resource": {
    "aws_cloudwatch_log_group": {
      "aws_AutoscalerLogGroup_BFE58053": {
        "name": "/ecs/Autoscaler"
      },
      "aws_RunnerLogGroup_711756A6": {
        "name": "/ecs/GHA"
      }
    },
    "aws_ecs_cluster": {
      "aws_Cluster_BA268616": {
        "name": "test-cluster"
      }
    },
    "aws_ecs_service": {
      "aws_AutoscalerService_C7C3AA3C": {
        "cluster": "\${aws_ecs_cluster.aws_Cluster_BA268616.arn}",
        "desired_count": 1,
        "launch_type": "FARGATE",
        "lifecycle": {
          "ignore_changes": [
            "desired_count"
          ]
        },
        "name": "autoscaler-service",
        "network_configuration": {
          "assign_public_ip": true,
          "security_groups": "\${data.aws_security_groups.aws_SecurityGroups_BAABB08D.ids}",
          "subnets": "\${data.aws_subnets.aws_Subnets_75E5377D.ids}"
        },
        "task_definition": "\${aws_ecs_task_definition.aws_AutoscalerTaskDefinition_24A76F67.arn_without_revision}"
      }
    },
    "aws_ecs_task_definition": {
      "aws_AutoscalerTaskDefinition_24A76F67": {
        "container_definitions": "\${jsonencode([{\\"name\\" = \\"autoscaler\\", \\"image\\" = var.autoscaler_image, \\"essential\\" = true, \\"environment\\" = [{\\"name\\" = \\"PAT\\", \\"value\\" = var.personal_access_token}, {\\"name\\" = \\"GITHUB_CONFIG_URL\\", \\"value\\" = var.github_config_url}, {\\"name\\" = \\"ECS_CLUSTER\\", \\"value\\" = aws_ecs_cluster.aws_Cluster_BA268616.arn}, {\\"name\\" = \\"ECS_SUBNETS\\", \\"value\\" = join(\\",\\", data.aws_subnets.aws_Subnets_75E5377D.ids)}, {\\"name\\" = \\"ECS_SECURITY_GROUPS\\", \\"value\\" = join(\\",\\", data.aws_security_groups.aws_SecurityGroups_BAABB08D.ids)}, {\\"name\\" = \\"SCALE_SET_NAME\\", \\"value\\" = \\"ecs-runner-set\\"}, {\\"name\\" = \\"TASK_DEFINITION_ARN\\", \\"value\\" = aws_ecs_task_definition.aws_RunnerTaskDefinition_9C7563BE.arn}], \\"logConfiguration\\" = {\\"logDriver\\" = \\"awslogs\\", \\"options\\" = {\\"awslogs-group\\" = aws_cloudwatch_log_group.aws_AutoscalerLogGroup_BFE58053.name, \\"awslogs-region\\" = data.aws_region.aws_Region_7477CA06.name, \\"awslogs-stream-prefix\\" = \\"ecs\\"}}}])}",
        "cpu": "256",
        "execution_role_arn": "\${aws_iam_role.aws_TaskExecutionRole_FAB64402.arn}",
        "family": "Autoscaler",
        "memory": "512",
        "network_mode": "awsvpc",
        "requires_compatibilities": [
          "FARGATE"
        ],
        "runtime_platform": {
          "cpu_architecture": "X86_64",
          "operating_system_family": "LINUX"
        },
        "task_role_arn": "\${aws_iam_role.aws_AutoscalerRole_CEB26423.arn}"
      },
      "aws_RunnerTaskDefinition_9C7563BE": {
        "container_definitions": "\${jsonencode([{\\"name\\" = \\"runner\\", \\"image\\" = \\"ghcr.io/actions/actions-runner:2.323.0\\", \\"essential\\" = true, \\"entryPoint\\" = [\\"/home/runner/run.sh\\"], \\"environment\\" = [{\\"name\\" = \\"ECS_CLUSTER_NAME\\", \\"value\\" = aws_ecs_cluster.aws_Cluster_BA268616.name}, {\\"name\\" = \\"ACTIONS_RUNNER_POD_NAME\\", \\"value\\" = \\"gha-pod\\"}, {\\"name\\" = \\"ECS_SUBNETS\\", \\"value\\" = join(\\",\\", data.aws_subnets.aws_Subnets_75E5377D.ids)}, {\\"name\\" = \\"ECS_SECURITY_GROUPS\\", \\"value\\" = join(\\",\\", data.aws_security_groups.aws_SecurityGroups_BAABB08D.ids)}, {\\"name\\" = \\"ECS_TASK_ROLE\\", \\"value\\" = aws_iam_role.aws_RunnerRole_75263C23.arn}, {\\"name\\" = \\"ECS_EXECUTION_ROLE\\", \\"value\\" = aws_iam_role.aws_TaskExecutionRole_FAB64402.arn}], \\"mountPoints\\" = [], \\"logConfiguration\\" = {\\"logDriver\\" = \\"awslogs\\", \\"options\\" = {\\"awslogs-group\\" = aws_cloudwatch_log_group.aws_RunnerLogGroup_711756A6.name, \\"awslogs-region\\" = data.aws_region.aws_Region_7477CA06.name, \\"awslogs-stream-prefix\\" = \\"ecs\\"}}}])}",
        "cpu": "1024",
        "execution_role_arn": "\${aws_iam_role.aws_TaskExecutionRole_FAB64402.arn}",
        "family": "GHA",
        "memory": "2048",
        "network_mode": "awsvpc",
        "requires_compatibilities": [
          "FARGATE"
        ],
        "runtime_platform": {
          "cpu_architecture": "X86_64",
          "operating_system_family": "LINUX"
        },
        "task_role_arn": "\${aws_iam_role.aws_RunnerRole_75263C23.arn}",
        "volume": [
        ]
      }
    },
    "aws_iam_policy": {
      "aws_AutoscalerPolicy_FF16A997": {
        "policy": "\${jsonencode({\\"Version\\" = \\"2012-10-17\\", \\"Statement\\" = [{\\"Sid\\" = \\"StartandMonitorTask\\", \\"Effect\\" = \\"Allow\\", \\"Action\\" = [\\"ecs:RunTask\\", \\"ecs:DescribeTasks\\", \\"logs:GetLogEvents\\", \\"iam:PassRole\\"], \\"Resource\\" = [\\"\${aws_ecs_task_definition.aws_RunnerTaskDefinition_9C7563BE.arn_without_revision}:*\\", aws_iam_role.aws_TaskExecutionRole_FAB64402.arn, aws_iam_role.aws_RunnerRole_75263C23.arn, \\"arn:aws:ecs:\${data.aws_region.aws_Region_7477CA06.name}:\${data.aws_caller_identity.aws_Identity_FDC445BF.account_id}:task/\${aws_ecs_cluster.aws_Cluster_BA268616.name}/*\\", \\"\${aws_cloudwatch_log_group.aws_RunnerLogGroup_711756A6.arn}:log-stream:*\\"]}, {\\"Sid\\" = \\"GetVpcInfo\\", \\"Effect\\" = \\"Allow\\", \\"Action\\" = [\\"ec2:DescribeSubnets\\", \\"ec2:DescribeSecurityGroups\\"], \\"Resource\\" = \\"*\\"}]})}"
      },
      "aws_RunnerPolicy_7B21DB81": {
        "policy": "\${jsonencode({\\"Version\\" = \\"2012-10-17\\", \\"Statement\\" = [{\\"Sid\\" = \\"StartandMonitorTask\\", \\"Effect\\" = \\"Allow\\", \\"Action\\" = [\\"ecs:RunTask\\", \\"ecs:TagResource\\", \\"ecs:ListTaskDefinitions\\", \\"ecs:ListTasks\\", \\"ecs:StopTask\\", \\"ecs:RegisterTaskDefinition\\", \\"ecs:DescribeTaskDefinition\\", \\"ecs:DeregisterTaskDefinition\\", \\"ecs:DeleteTaskDefinitions\\", \\"ecs:ExecuteCommand\\", \\"ecs:DescribeTasks\\", \\"logs:GetLogEvents\\", \\"iam:PassRole\\", \\"logs:StartLiveTail\\", \\"logs:CreateLogStream\\"], \\"Resource\\" = [\\"arn:aws:ecs:\${data.aws_region.aws_Region_7477CA06.name}:\${data.aws_caller_identity.aws_Identity_FDC445BF.account_id}:task-definition/gha-pod-workflow:*\\", aws_ecs_cluster.aws_Cluster_BA268616.arn, aws_iam_role.aws_TaskExecutionRole_FAB64402.arn, aws_iam_role.aws_RunnerRole_75263C23.arn, \\"arn:aws:ecs:\${data.aws_region.aws_Region_7477CA06.name}:\${data.aws_caller_identity.aws_Identity_FDC445BF.account_id}:task/\${aws_ecs_cluster.aws_Cluster_BA268616.name}/*\\", \\"*\\"]}, {\\"Sid\\" = \\"GetVpcInfo\\", \\"Effect\\" = \\"Allow\\", \\"Action\\" = [\\"ec2:DescribeSubnets\\", \\"ec2:DescribeSecurityGroups\\"], \\"Resource\\" = \\"*\\"}, {\\"Sid\\" = \\"ExecCommands\\", \\"Effect\\" = \\"Allow\\", \\"Action\\" = [\\"ssmmessages:CreateControlChannel\\", \\"ssmmessages:CreateDataChannel\\", \\"ssmmessages:OpenControlChannel\\", \\"ssmmessages:OpenDataChannel\\"], \\"Resource\\" = \\"*\\"}]})}"
      }
    },
    "aws_iam_role": {
      "aws_AutoscalerRole_CEB26423": {
        "assume_role_policy": "\${jsonencode({\\"Version\\" = \\"2012-10-17\\", \\"Statement\\" = [{\\"Effect\\" = \\"Allow\\", \\"Principal\\" = {\\"Service\\" = \\"ecs-tasks.amazonaws.com\\"}, \\"Action\\" = \\"sts:AssumeRole\\"}]})}"
      },
      "aws_RunnerRole_75263C23": {
        "assume_role_policy": "\${jsonencode({\\"Version\\" = \\"2012-10-17\\", \\"Statement\\" = [{\\"Effect\\" = \\"Allow\\", \\"Principal\\" = {\\"Service\\" = \\"ecs-tasks.amazonaws.com\\"}, \\"Action\\" = \\"sts:AssumeRole\\"}]})}"
      },
      "aws_TaskExecutionRole_FAB64402": {
        "assume_role_policy": "\${jsonencode({\\"Version\\" = \\"2012-10-17\\", \\"Statement\\" = [{\\"Effect\\" = \\"Allow\\", \\"Principal\\" = {\\"Service\\" = \\"ecs-tasks.amazonaws.com\\"}, \\"Action\\" = \\"sts:AssumeRole\\"}]})}"
      }
    },
    "aws_iam_role_policy_attachment": {
      "aws_AutoscalerPolicyAttachment_5402A0C0": {
        "policy_arn": "\${aws_iam_policy.aws_AutoscalerPolicy_FF16A997.arn}",
        "role": "\${aws_iam_role.aws_AutoscalerRole_CEB26423.name}"
      },
      "aws_RunnerPolicyAttachment_A293771C": {
        "policy_arn": "\${aws_iam_policy.aws_RunnerPolicy_7B21DB81.arn}",
        "role": "\${aws_iam_role.aws_RunnerRole_75263C23.name}"
      },
      "aws_TeskExecutionRoleAttachment_9AEA9D8D": {
        "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        "role": "\${aws_iam_role.aws_TaskExecutionRole_FAB64402.name}"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "aws": {
        "source": "aws",
        "version": "6.7.0"
      }
    }
  },
  "variable": {
    "autoscaler_image": {
      "default": "ghcr.io/hi-fi/gha-runners-on-managed-env:ebe559da0d51e04eff903f0a04de09da93f4614f",
      "description": "Autoscaler image triggering runners"
    },
    "github_config_url": {
      "description": "Github URL where runners should register to. Format https://<GitHub host>/<your_enterprise/org/repo>",
      "nullable": false
    },
    "personal_access_token": {
      "description": "Github PAT with Actions:Read and Admin:Read+Write scopes",
      "nullable": false,
      "sensitive": true
    }
  }
}"
`;

exports[`Should synthesize snapshot for construct > without container support on > Azure 1`] = `
"{
  "data": {
    "azapi_resource_action": {
      "azure_storageAccessKeys_0EC3B2BC": {
        "action": "listKeys",
        "depends_on": [
          "azapi_resource.azure_storageAccount_7849B080"
        ],
        "resource_id": "\${azapi_resource.azure_storageAccount_7849B080.id}",
        "response_export_values": {
          "0": "*"
        },
        "type": "Microsoft.Storage/storageAccounts@2023-01-01"
      }
    },
    "azurerm_subscription": {
      "azure_sub_036A67C4": {
      }
    }
  },
  "provider": {
    "azapi": [
      {
      }
    ],
    "azurerm": [
      {
        "features": [
          {
          }
        ]
      }
    ],
    "random": [
      {
      }
    ]
  },
  "resource": {
    "azapi_resource": {
      "azure_acaenv_918770EE": {
        "body": {
          "properties": {
            "appLogsConfiguration": {
              "destination": "log-analytics",
              "logAnalyticsConfiguration": {
                "customerId": "\${azurerm_log_analytics_workspace.azure_log_E9126391.workspace_id}",
                "sharedKey": "\${azurerm_log_analytics_workspace.azure_log_E9126391.primary_shared_key}"
              }
            },
            "infrastructureResourceGroup": "managed-aca-rg",
            "workloadProfiles": [
              {
                "name": "Consumption",
                "workloadProfileType": "Consumption"
              }
            ]
          }
        },
        "lifecycle": {
          "ignore_changes": [
            "tags"
          ]
        },
        "location": "\${var.azure_location_D739E5B1}",
        "name": "gha-runner-environment",
        "parent_id": "\${azurerm_resource_group.azure_rg_F8487AD9.id}",
        "type": "Microsoft.App/managedEnvironments@2024-03-01"
      },
      "azure_autoscalerCache_B812ADD5": {
        "body": {
          "properties": {
            "sourceRepository": "ghcr.io/hi-fi/gha-runners-on-managed-env",
            "targetRepository": "autoscaler"
          }
        },
        "name": "autoscaler-cache",
        "parent_id": "\${azurerm_container_registry.azure_acr_745DE243.id}",
        "type": "Microsoft.ContainerRegistry/registries/cacheRules@2023-01-01-preview"
      },
      "azure_externalsShare_884181D1": {
        "body": {
          "properties": {
            "enabledProtocols": "SMB"
          }
        },
        "name": "ghaexternalsshare",
        "parent_id": "\${azapi_resource.azure_storageAccount_7849B080.id}/fileServices/default",
        "type": "Microsoft.Storage/storageAccounts/fileServices/shares@2023-01-01"
      },
      "azure_ghaRunnerJob_55D30F13": {
        "body": {
          "properties": {
            "configuration": {
              "manualTriggerConfig": {
                "parallelism": 1,
                "replicaCompletionCount": 1
              },
              "registries": [
                {
                  "identity": "\${azurerm_user_assigned_identity.azure_identity_80584304.id}",
                  "server": "\${azurerm_container_registry.azure_acr_745DE243.login_server}"
                }
              ],
              "replicaTimeout": 1200,
              "triggerType": "Manual"
            },
            "environmentId": "\${azapi_resource.azure_acaenv_918770EE.id}",
            "template": {
              "containers": [
                {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "export EXECID=$(cat /proc/sys/kernel/random/uuid) && mkdir -p /tmp/_work/$EXECID && ln -s /tmp/_work/$EXECID _work && /home/runner/run.sh ; rm -r /tmp/_work/$EXECID"
                  ],
                  "env": [
                    {
                      "name": "APPSETTING_WEBSITE_SITE_NAME",
                      "value": "identity-workaround"
                    },
                    {
                      "name": "AZURE_CLIENT_ID",
                      "value": "\${azurerm_user_assigned_identity.azure_identity_80584304.client_id}"
                    },
                    {
                      "name": "RG_NAME",
                      "value": "\${azurerm_resource_group.azure_rg_F8487AD9.name}"
                    },
                    {
                      "name": "LOG_ID",
                      "value": "\${azurerm_log_analytics_workspace.azure_log_E9126391.workspace_id}"
                    },
                    {
                      "name": "STORAGE_NAME",
                      "value": "\${azurerm_container_app_environment_storage.azure_acaenvstorage_4F70C244.name}"
                    },
                    {
                      "name": "EXTERNAL_STORAGE_NAME",
                      "value": "\${azurerm_container_app_environment_storage.azure_acaexternalstorage_815E5F49.name}"
                    },
                    {
                      "name": "SUBSCRIPTION_ID",
                      "value": "\${data.azurerm_subscription.azure_sub_036A67C4.subscription_id}"
                    },
                    {
                      "name": "ACA_ENVIRONMENT_ID",
                      "value": "\${azapi_resource.azure_acaenv_918770EE.id}"
                    }
                  ],
                  "image": "\${azurerm_container_registry.azure_acr_745DE243.login_server}/root-actions-runner:latest",
                  "name": "main",
                  "resources": {
                    "cpu": 1,
                    "memory": "2Gi"
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp/_work",
                      "volumeName": "work"
                    },
                    {
                      "mountPath": "/tmp/externals",
                      "volumeName": "externals"
                    }
                  ]
                }
              ],
              "volumes": [
                {
                  "mountOptions": "mfsymlinks",
                  "name": "work",
                  "storageName": "\${azurerm_container_app_environment_storage.azure_acaenvstorage_4F70C244.name}",
                  "storageType": "AzureFile"
                },
                {
                  "mountOptions": "mfsymlinks",
                  "name": "externals",
                  "storageName": "\${azurerm_container_app_environment_storage.azure_acaexternalstorage_815E5F49.name}",
                  "storageType": "AzureFile"
                }
              ]
            }
          }
        },
        "depends_on": [
          "azapi_resource.azure_runnerCache_9A0FFB81"
        ],
        "identity": [
          {
            "identity_ids": [
              "\${azurerm_user_assigned_identity.azure_identity_80584304.id}"
            ],
            "type": "UserAssigned"
          }
        ],
        "lifecycle": {
          "ignore_changes": [
            "tags"
          ]
        },
        "location": "\${var.azure_location_D739E5B1}",
        "name": "gha-runner-job-01",
        "parent_id": "\${azurerm_resource_group.azure_rg_F8487AD9.id}",
        "type": "Microsoft.App/jobs@2024-02-02-preview"
      },
      "azure_runnerCache_9A0FFB81": {
        "body": {
          "properties": {
            "sourceRepository": "ghcr.io/hi-fi/root-actions-runner",
            "targetRepository": "root-actions-runner"
          }
        },
        "name": "root-runner-cache",
        "parent_id": "\${azurerm_container_registry.azure_acr_745DE243.id}",
        "type": "Microsoft.ContainerRegistry/registries/cacheRules@2023-01-01-preview"
      },
      "azure_storageAccount_7849B080": {
        "body": {
          "kind": "StorageV2",
          "properties": {
            "largeFileSharesState": "Enabled"
          },
          "sku": {
            "name": "Standard_LRS"
          }
        },
        "lifecycle": {
          "ignore_changes": [
            "tags"
          ]
        },
        "location": "\${var.azure_location_D739E5B1}",
        "name": "ghastorageaccount\${random_string.azure_randomSuffix_2BEE0D8C.result}",
        "parent_id": "\${azurerm_resource_group.azure_rg_F8487AD9.id}",
        "response_export_values": {
        },
        "type": "Microsoft.Storage/storageAccounts@2023-01-01"
      },
      "azure_storageShare_A74F40DD": {
        "body": {
          "properties": {
            "enabledProtocols": "SMB"
          }
        },
        "name": "ghaexampleshare",
        "parent_id": "\${azapi_resource.azure_storageAccount_7849B080.id}/fileServices/default",
        "type": "Microsoft.Storage/storageAccounts/fileServices/shares@2023-01-01"
      }
    },
    "azurerm_container_app": {
      "azure_autoscalerApp_7BB97905": {
        "container_app_environment_id": "\${azapi_resource.azure_acaenv_918770EE.id}",
        "depends_on": [
          "azapi_resource.azure_autoscalerCache_B812ADD5"
        ],
        "identity": {
          "identity_ids": [
            "\${azurerm_user_assigned_identity.azure_identity_80584304.id}"
          ],
          "type": "SystemAssigned, UserAssigned"
        },
        "lifecycle": {
          "ignore_changes": [
            "tags",
            "workload_profile_name"
          ]
        },
        "name": "autoscaler-app-01",
        "registry": [
          {
            "identity": "\${azurerm_user_assigned_identity.azure_identity_80584304.id}",
            "server": "\${azurerm_container_registry.azure_acr_745DE243.login_server}"
          }
        ],
        "resource_group_name": "\${azurerm_resource_group.azure_rg_F8487AD9.name}",
        "revision_mode": "Single",
        "secret": [
          {
            "name": "pat",
            "value": "\${var.personal_access_token}"
          }
        ],
        "template": {
          "container": [
            {
              "cpu": 0.25,
              "env": [
                {
                  "name": "PAT",
                  "secret_name": "pat"
                },
                {
                  "name": "GITHUB_CONFIG_URL",
                  "value": "\${var.github_config_url}"
                },
                {
                  "name": "AZURE_TENANT_ID",
                  "value": "\${data.azurerm_subscription.azure_sub_036A67C4.tenant_id}"
                },
                {
                  "name": "SUBSCRIPTION_ID",
                  "value": "\${data.azurerm_subscription.azure_sub_036A67C4.subscription_id}"
                },
                {
                  "name": "RESOURCE_GROUP_NAME",
                  "value": "\${azurerm_resource_group.azure_rg_F8487AD9.name}"
                },
                {
                  "name": "JOB_NAME",
                  "value": "\${azapi_resource.azure_ghaRunnerJob_55D30F13.name}"
                },
                {
                  "name": "SCALE_SET_NAME",
                  "value": "aca-runner-set"
                }
              ],
              "image": "\${azurerm_container_registry.azure_acr_745DE243.login_server}/autoscaler:test",
              "memory": "0.5Gi",
              "name": "autoscaler"
            }
          ]
        }
      }
    },
    "azurerm_container_app_environment_storage": {
      "azure_acaenvstorage_4F70C244": {
        "access_key": "\${element(element(data.azapi_resource_action.azure_storageAccessKeys_0EC3B2BC.output[\\"0\\"], 0), 0).value}",
        "access_mode": "ReadWrite",
        "account_name": "\${azapi_resource.azure_storageAccount_7849B080.name}",
        "container_app_environment_id": "\${azapi_resource.azure_acaenv_918770EE.id}",
        "depends_on": [
          "azapi_resource.azure_storageShare_A74F40DD"
        ],
        "name": "gharunnerjobstorage",
        "share_name": "\${azapi_resource.azure_storageShare_A74F40DD.name}"
      },
      "azure_acaexternalstorage_815E5F49": {
        "access_key": "\${element(element(data.azapi_resource_action.azure_storageAccessKeys_0EC3B2BC.output[\\"0\\"], 0), 0).value}",
        "access_mode": "ReadWrite",
        "account_name": "\${azapi_resource.azure_storageAccount_7849B080.name}",
        "container_app_environment_id": "\${azapi_resource.azure_acaenv_918770EE.id}",
        "depends_on": [
          "azapi_resource.azure_externalsShare_884181D1"
        ],
        "name": "gharunnerexternalstorage",
        "share_name": "\${azapi_resource.azure_externalsShare_884181D1.name}"
      }
    },
    "azurerm_container_registry": {
      "azure_acr_745DE243": {
        "lifecycle": {
          "ignore_changes": [
            "tags"
          ]
        },
        "location": "\${var.azure_location_D739E5B1}",
        "name": "runneracr\${random_string.azure_randomSuffix_2BEE0D8C.result}",
        "resource_group_name": "\${azurerm_resource_group.azure_rg_F8487AD9.name}",
        "sku": "Basic"
      }
    },
    "azurerm_log_analytics_workspace": {
      "azure_log_E9126391": {
        "lifecycle": {
          "ignore_changes": [
            "tags"
          ]
        },
        "location": "\${var.azure_location_D739E5B1}",
        "name": "gha-example-logs",
        "resource_group_name": "\${azurerm_resource_group.azure_rg_F8487AD9.name}"
      }
    },
    "azurerm_resource_group": {
      "azure_rg_F8487AD9": {
        "lifecycle": {
          "ignore_changes": [
            "tags"
          ]
        },
        "location": "\${var.azure_location_D739E5B1}",
        "name": "gha-runner-rg"
      }
    },
    "azurerm_role_assignment": {
      "azure_actionContainerStartRoleAssignment_1120CBE9": {
        "principal_id": "\${azurerm_user_assigned_identity.azure_identity_80584304.principal_id}",
        "role_definition_id": "\${azurerm_role_definition.azure_jobCreationRole_0FBEE831.role_definition_resource_id}",
        "scope": "\${azurerm_resource_group.azure_rg_F8487AD9.id}"
      },
      "azure_imagePushRoleAssignment_C3B33CD2": {
        "principal_id": "\${azurerm_user_assigned_identity.azure_identity_80584304.principal_id}",
        "role_definition_name": "AcrPush",
        "scope": "\${azurerm_container_registry.azure_acr_745DE243.id}"
      },
      "azure_jobLogReadAssignment_EA283E84": {
        "principal_id": "\${azurerm_user_assigned_identity.azure_identity_80584304.principal_id}",
        "role_definition_name": "Log Analytics Reader",
        "scope": "\${azurerm_log_analytics_workspace.azure_log_E9126391.id}"
      },
      "azure_roleAssignment_E7748C09": {
        "principal_id": "\${azurerm_user_assigned_identity.azure_identity_80584304.principal_id}",
        "role_definition_name": "AcrPull",
        "scope": "\${azurerm_container_registry.azure_acr_745DE243.id}"
      },
      "azure_scaleJobRoleAssignment_674FD66A": {
        "principal_id": "\${azurerm_container_app.azure_autoscalerApp_7BB97905.identity[0].principal_id}",
        "role_definition_id": "\${azurerm_role_definition.azure_jobRole_F1E17C6F.role_definition_resource_id}",
        "scope": "\${azapi_resource.azure_ghaRunnerJob_55D30F13.id}"
      }
    },
    "azurerm_role_definition": {
      "azure_jobCreationRole_0FBEE831": {
        "name": "gha-example-revision-create-role-\${random_string.azure_randomSuffix_2BEE0D8C.result}",
        "permissions": [
          {
            "actions": [
              "microsoft.app/jobs/start/action",
              "microsoft.app/jobs/stop/action",
              "microsoft.app/jobs/read",
              "microsoft.app/jobs/write",
              "microsoft.app/jobs/executions/read",
              "microsoft.app/managedEnvironments/join/action",
              "microsoft.app/jobs/delete"
            ]
          }
        ],
        "scope": "\${data.azurerm_subscription.azure_sub_036A67C4.id}"
      },
      "azure_jobRole_F1E17C6F": {
        "name": "gha-example-revision-start-role-\${random_string.azure_randomSuffix_2BEE0D8C.result}",
        "permissions": [
          {
            "actions": [
              "microsoft.app/jobs/start/action",
              "microsoft.app/jobs/stop/action",
              "microsoft.app/jobs/read",
              "microsoft.app/jobs/executions/read"
            ]
          }
        ],
        "scope": "\${data.azurerm_subscription.azure_sub_036A67C4.id}"
      }
    },
    "azurerm_user_assigned_identity": {
      "azure_identity_80584304": {
        "lifecycle": {
          "ignore_changes": [
            "tags"
          ]
        },
        "location": "\${var.azure_location_D739E5B1}",
        "name": "aca-acr-access",
        "resource_group_name": "\${azurerm_resource_group.azure_rg_F8487AD9.name}"
      }
    },
    "random_string": {
      "azure_randomSuffix_2BEE0D8C": {
        "length": 6,
        "special": false,
        "upper": false
      }
    }
  },
  "terraform": {
    "required_providers": {
      "azapi": {
        "source": "azure/azapi",
        "version": "2.3.0"
      },
      "azurerm": {
        "source": "azurerm",
        "version": "4.38.1"
      },
      "random": {
        "source": "hashicorp/random",
        "version": "3.7.2"
      }
    }
  },
  "variable": {
    "autoscaler_image": {
      "default": "ghcr.io/hi-fi/gha-runners-on-managed-env:ebe559da0d51e04eff903f0a04de09da93f4614f",
      "description": "Autoscaler image triggering runners"
    },
    "azure_location_D739E5B1": {
      "default": "westeurope",
      "description": "Location where to provision resources to",
      "nullable": false,
      "sensitive": false,
      "type": "string"
    },
    "github_config_url": {
      "description": "Github URL where runners should register to. Format https://<GitHub host>/<your_enterprise/org/repo>",
      "nullable": false
    },
    "personal_access_token": {
      "description": "Github PAT with Actions:Read and Admin:Read+Write scopes",
      "nullable": false,
      "sensitive": true
    }
  }
}"
`;

exports[`Should synthesize snapshot for construct > without container support on > Google 1`] = `
"{
  "locals": {
    "google_autoscalerMember_A1BCDDDA": "serviceAccount:\${google_service_account.google_autoscalerServiceAccount_7735011D.email}",
    "google_bucketModification_5BC76FE7": "CLOUDSDK_CORE_DISABLE_PROMPTS=1 gcloud alpha storage buckets create gs://gha-runner-job-externals --project=gha-runner-example --location=europe-north1 --uniform-bucket-level-access --enable-hierarchical-namespace",
    "google_ghaMember_D48EB3AB": "serviceAccount:\${google_service_account.google_jobServiceAccount_2E7B13C1.email}"
  },
  "provider": {
    "google": [
      {
        "project": "gha-runner-example",
        "region": "europe-north1"
      }
    ],
    "null": [
      {
      }
    ]
  },
  "resource": {
    "google_artifact_registry_repository": {
      "google_registry_9512CCE4": {
        "description": "Repository to host run and resulting images from GHA runs",
        "format": "DOCKER",
        "mode": "REMOTE_REPOSITORY",
        "remote_repository_config": {
          "docker_repository": {
            "custom_repository": {
              "uri": "https://ghcr.io"
            }
          }
        },
        "repository_id": "gha-runner-test"
      }
    },
    "google_cloud_run_service": {
      "google_autoscalerService_B10CCE0E": {
        "location": "europe-north1",
        "metadata": {
          "annotations": {
            "run.googleapis.com/ingress": "internal"
          }
        },
        "name": "gha-autoscaler",
        "template": {
          "metadata": {
            "annotations": {
              "autoscaling.knative.dev/maxScale": "1",
              "autoscaling.knative.dev/minScale": "1",
              "run.googleapis.com/cpu-throttling": "false",
              "run.googleapis.com/startup-cpu-boost": "false"
            }
          },
          "spec": {
            "container_concurrency": 1,
            "containers": [
              {
                "env": [
                  {
                    "name": "PAT",
                    "value": "\${var.personal_access_token}"
                  },
                  {
                    "name": "GITHUB_CONFIG_URL",
                    "value": "\${var.github_config_url}"
                  },
                  {
                    "name": "JOB_NAME",
                    "value": "\${google_cloud_run_v2_job.google_ghaJob_F8BA60A9.name}"
                  },
                  {
                    "name": "SCALE_SET_NAME",
                    "value": "cr-runner-set"
                  },
                  {
                    "name": "CLOUDSDK_RUN_REGION",
                    "value": "europe-north1"
                  },
                  {
                    "name": "GOOGLE_CLOUD_PROJECT",
                    "value": "gha-runner-example"
                  }
                ],
                "image": "\${google_artifact_registry_repository.google_registry_9512CCE4.location}-docker.pkg.dev/gha-runner-example/\${google_artifact_registry_repository.google_registry_9512CCE4.repository_id}/hi-fi/gha-runners-on-managed-env:test",
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "512Mi"
                  }
                }
              }
            ],
            "service_account_name": "\${google_service_account.google_autoscalerServiceAccount_7735011D.email}"
          }
        }
      }
    },
    "google_cloud_run_v2_job": {
      "google_ghaJob_F8BA60A9": {
        "deletion_protection": false,
        "depends_on": [
          "null_resource.google_gcloud_D7708493"
        ],
        "location": "europe-north1",
        "name": "gha-runner-job",
        "template": {
          "template": {
            "containers": [
              {
                "command": [
                  "/home/runner/ephemeral_runner.sh"
                ],
                "env": [
                  {
                    "name": "CLOUDSDK_RUN_REGION",
                    "value": "europe-north1"
                  },
                  {
                    "name": "GOOGLE_CLOUD_PROJECT",
                    "value": "gha-runner-example"
                  },
                  {
                    "name": "EXTERNAL_STORAGE_NAME",
                    "value": "gha-runner-job-externals"
                  },
                  {
                    "name": "TAR_OPTIONS",
                    "value": "--touch --no-overwrite-dir --no-same-owner"
                  }
                ],
                "image": "\${google_artifact_registry_repository.google_registry_9512CCE4.location}-docker.pkg.dev/gha-runner-example/\${google_artifact_registry_repository.google_registry_9512CCE4.repository_id}/hi-fi/actions-runner:cr",
                "resources": {
                  "limits": {
                    "cpu": "1",
                    "memory": "2Gi"
                  }
                },
                "volume_mounts": [
                  {
                    "mount_path": "/home/runner/_work/externals",
                    "name": "externals"
                  }
                ]
              }
            ],
            "max_retries": 0,
            "service_account": "\${google_service_account.google_jobServiceAccount_2E7B13C1.email}",
            "volumes": [
              {
                "gcs": {
                  "bucket": "gha-runner-job-externals"
                },
                "name": "externals"
              }
            ]
          }
        }
      }
    },
    "google_project_iam_custom_role": {
      "google_autoscalerRole_22D2DF57": {
        "permissions": [
          "artifactregistry.dockerimages.get",
          "artifactregistry.dockerimages.list",
          "run.jobs.run",
          "run.jobs.create",
          "run.jobs.delete"
        ],
        "role_id": "ghaAutoscalerRole",
        "title": "GHA Autoscaler Role"
      },
      "google_runnerRole_5138364E": {
        "permissions": [
          "artifactregistry.dockerimages.get",
          "artifactregistry.dockerimages.list",
          "run.jobs.run",
          "run.jobs.create",
          "run.jobs.delete",
          "run.jobs.list",
          "run.executions.get"
        ],
        "role_id": "ghaRunnerRole",
        "title": "GHA Runner Role"
      }
    },
    "google_project_iam_member": {
      "google_autoscalerRoleBindingRunServiceAgent_D7CD86CF": {
        "member": "\${local.google_autoscalerMember_A1BCDDDA}",
        "project": "gha-runner-example",
        "role": "roles/run.serviceAgent"
      },
      "google_autoscalerRoleBindingRun_A45078A8": {
        "member": "\${local.google_autoscalerMember_A1BCDDDA}",
        "project": "gha-runner-example",
        "role": "roles/run.developer"
      },
      "google_autoscalerRoleBindingStorage_231D9D9B": {
        "member": "\${local.google_autoscalerMember_A1BCDDDA}",
        "project": "gha-runner-example",
        "role": "roles/storage.admin"
      },
      "google_runnerRoleBindingRunServiceAgent_781BDE32": {
        "member": "\${local.google_ghaMember_D48EB3AB}",
        "project": "gha-runner-example",
        "role": "roles/run.serviceAgent"
      },
      "google_runnerRoleBindingRunViewer_5069E1BD": {
        "member": "\${local.google_ghaMember_D48EB3AB}",
        "project": "gha-runner-example",
        "role": "roles/run.viewer"
      },
      "google_runnerRoleBindingStorage_8D6BE75C": {
        "member": "\${local.google_ghaMember_D48EB3AB}",
        "project": "gha-runner-example",
        "role": "roles/storage.admin"
      },
      "google_runnerRoleBinding_A9A4507E": {
        "member": "\${local.google_ghaMember_D48EB3AB}",
        "project": "gha-runner-example",
        "role": "\${google_project_iam_custom_role.google_runnerRole_5138364E.id}"
      }
    },
    "google_service_account": {
      "google_autoscalerServiceAccount_7735011D": {
        "account_id": "autoscaler-sa"
      },
      "google_jobServiceAccount_2E7B13C1": {
        "account_id": "gha-runner-job-sa"
      }
    },
    "null_resource": {
      "google_gcloud_D7708493": {
        "provisioner": [
          {
            "local-exec": {
              "command": "\${local.google_bucketModification_5BC76FE7}"
            }
          }
        ],
        "triggers": {
          "fqn": "\${local.google_bucketModification_5BC76FE7}"
        }
      }
    }
  },
  "terraform": {
    "required_providers": {
      "google": {
        "source": "google",
        "version": "6.46.0"
      },
      "null": {
        "source": "null",
        "version": "3.2.4"
      }
    }
  },
  "variable": {
    "autoscaler_image": {
      "default": "ghcr.io/hi-fi/gha-runners-on-managed-env:ebe559da0d51e04eff903f0a04de09da93f4614f",
      "description": "Autoscaler image triggering runners"
    },
    "github_config_url": {
      "description": "Github URL where runners should register to. Format https://<GitHub host>/<your_enterprise/org/repo>",
      "nullable": false
    },
    "personal_access_token": {
      "description": "Github PAT with Actions:Read and Admin:Read+Write scopes",
      "nullable": false,
      "sensitive": true
    }
  }
}"
`;
